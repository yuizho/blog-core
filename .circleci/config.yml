# Java Gradle CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-java/ for more details
#
version: 2
jobs:
  java-test:
    docker:
    # specify the version you desire here
    - image: circleci/openjdk:8-jdk

    working_directory: ~/repo

    environment:
      # Customize the JVM maximum heap limit
      JVM_OPTS: -Xmx3200m
      TERM: dumb

    steps:
    - checkout

    # Download and cache dependencies
    - restore_cache:
        keys:
        - v1-dependencies-{{ checksum "build.gradle" }}
        # fallback to using the latest cache if no exact match is found
        - v1-dependencies-

    - run: gradle dependencies

    - save_cache:
        paths:
        - ~/.gradle
        key: v1-dependencies-{{ checksum "build.gradle" }}

    # run tests!
    - run:
        name: execute tests
        command: gradle test jacocoTestReport

    - run:
        name: send coverage report to codecov
        command: bash <(curl -s https://codecov.io/bash)

  build-front:
    filters:
      branches:
        only: master
    docker:
      # specify the version you desire here
      - image: circleci/node:11

    working_directory: ~/repo

    steps:
      - checkout
      - run:
          name: submodule update
          command: git submodule update --init

      # Download and cache dependencies
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "package.json" }}
            # fallback to using the latest cache if no exact match is found
            - v1-dependencies-

      - run: yarn install

      - save_cache:
          paths:
            - node_modules
          key: v1-dependencies-{{ checksum "package.json" }}

      # build frontend resouces
      - run:
          name: build frontend resources
          command: |
            cd ~/repo/frontend
            yarn run prod

      # deploy to heroku branch
      - run:
          name: configure git account
          command: |
            git config user.email "yuizho3@gmail.com"
            git config user.name "yuizho-circleci"
            git fetch
            git checkout -b heroku origin/heroku
            cd ~/repo
            rm -r public
            cp -r frontend/dist public
      - run:
          name: git commit and push
          command: |
            if [ -n "$(git status --porcelain)" ]; then
              echo 'start commit and push'
              git add -A
              git commit -m "[skip ci] commit frontend resources"
              git push origin heroku
            else
              echo 'skip commit and push'
            fi
workflows:
  version: 2
  java-test-and-build-front:
    jobs:
      - java-test:
      - build-front:
          requires:
            - java-test